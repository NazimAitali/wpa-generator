[{"C:\\Users\\Nazim\\Desktop\\React-testing\\wpa-generator\\src\\index.js":"1","C:\\Users\\Nazim\\Desktop\\React-testing\\wpa-generator\\src\\App.js":"2","C:\\Users\\Nazim\\Desktop\\React-testing\\wpa-generator\\src\\reportWebVitals.js":"3","C:\\Users\\Nazim\\Desktop\\React-testing\\wpa-generator\\src\\components\\choice\\index.js":"4","C:\\Users\\Nazim\\Desktop\\React-testing\\wpa-generator\\src\\components\\display\\index.js":"5"},{"size":547,"mtime":1610450360176,"results":"6","hashOfConfig":"7"},{"size":173,"mtime":1610456665881,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":3844,"mtime":1610792267735,"results":"10","hashOfConfig":"7"},{"size":1851,"mtime":1610743225640,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1j7hy0",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\Nazim\\Desktop\\React-testing\\wpa-generator\\src\\index.js",[],["24","25"],"C:\\Users\\Nazim\\Desktop\\React-testing\\wpa-generator\\src\\App.js",[],"C:\\Users\\Nazim\\Desktop\\React-testing\\wpa-generator\\src\\reportWebVitals.js",[],"C:\\Users\\Nazim\\Desktop\\React-testing\\wpa-generator\\src\\components\\choice\\index.js",[],"C:\\Users\\Nazim\\Desktop\\React-testing\\wpa-generator\\src\\components\\display\\index.js",["26","27"],"import React from \"react\";\r\nimport \"./style.css\";\r\nimport { Button, useToast } from \"@chakra-ui/react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { ImCopy } from \"react-icons/im\";\r\nimport Typical from \"react-typical\";\r\n\r\nconst Display = ({ result, KeyGen, setResult, setCopied }) => {\r\n  const toast = useToast();\r\n  return (\r\n    <div className=\"display\">\r\n      <div className=\"code\">\r\n        <Typical steps={[result]} loop={1} wrapper=\"p\" />{\" \"}\r\n        {result ? (\r\n          <CopyToClipboard text={result} onCopy={() => setCopied(true)}>\r\n            <ImCopy\r\n              className=\"copy-icon\"\r\n              onClick={() =>\r\n                toast({\r\n                  title: \"Status : Copied\",\r\n                  description: \"Key a was copied to the clipboard.\",\r\n                  status: \"success\",\r\n                  duration: 900,\r\n                  isClosable: true,\r\n                })\r\n              }\r\n            />\r\n          </CopyToClipboard>\r\n        ) : null}\r\n      </div>\r\n      <div className=\"generate\">\r\n        <Button\r\n          width=\"200px\"\r\n          colorScheme=\"teal\"\r\n          size=\"lg\"\r\n          onClick={() => (\r\n            KeyGen(),\r\n            setCopied(false),\r\n            toast({\r\n              title: \"Status : Generate\",\r\n              description: \"Key is generated.\",\r\n              status: \"success\",\r\n              duration: 900,\r\n              isClosable: true,\r\n            })\r\n          )}\r\n        >\r\n          <div className=\"btn-name\">Generate</div>\r\n        </Button>\r\n        <Button\r\n          width=\"200px\"\r\n          colorScheme=\"teal\"\r\n          size=\"lg\"\r\n          onClick={() => (setResult(\"\"), setCopied(false))}\r\n        >\r\n          <div className=\"btn-name\">Clean</div>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Display;\r\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":37,"column":21,"nodeType":"34","messageId":"35","endLine":37,"endColumn":22},{"ruleId":"32","severity":1,"message":"33","line":54,"column":40,"nodeType":"34","messageId":"35","endLine":54,"endColumn":41},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]